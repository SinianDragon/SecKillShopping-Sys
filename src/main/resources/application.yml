spring:
  thymeleaf:
    # Thymeleaf
    cache: false
  datasource:
    # 5.7版本cj,8.0版本:com.mysql.cj.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.64.128:3306/seckill?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
    # hikari:速度快适合高并发
    hikari:
      pool-name: DataHikariCP
      # 最小空闲连接
      minimum-idle: 5
      # 空间连接存活最大时间，默认600000(10分钟)
      idle-timeout: 1800000
      # 从连接池返回的连接自动提交
      auto-commit: true
      # 连接最大存活时间，0表示永久存活，默认1800000
      max-lifetime: 1800000
      # 连接超时时间，默认30000(30秒)
      connection-timeout: 30000
      # 测试连接是否可用的查询语句
      connection-test-query: SELECT 1


  redis:
    host: 192.168.64.128
    port: 6379
    database: 0
    lettuce:
      pool:
          max-active: 8
          max-wait: 10000ms
          max-idle: 200
          min-idle: 5



  web:
    # 静态资源处理
    #启用默认静态资源处理
    resources:
      add-mappings: true
      cache:
        cache control:
          # 缓存响应时间(秒)
          max-age: 3600
      chain:
        # 启动资源链缓存
        cache: true
        # 启动资源链：默认禁用
        enabled: false
        # 压缩资源(gzip,brotli),默认启用
        compressed: true
        #启用h5应用缓存，默认禁用
        html-application-cache: true
      static-locations: classpath:/static/
  rabbitmq:
    # 服务器
    host: 192.168.64.128
    # 用户名
    username: admin
    # 密码
    password: admin
    # 虚拟主机
    virtual-host: my_vhost
    # 端口
    port: 5672
    listener:
      simple:
        # 消费者最小数量
        concurrency: 10
        # 消费者最大数量
        max-concurrency: 10
        # 限制消费者每次只能处理一条消息，处理完毕再处理下一条
        prefetch: 1
        # 启动时是否默认启动容器
        auto-startup: true
        # 消息被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        # 发布重试，默认false
        enabled: true
        # 重试时间
        initial-interval: 1000ms
        # 重试最大次数
        max-attempts: 3
        # 重试最大间隔时间
        max-interval: 10000ms
        # 重试的间隔乘数。比如配2.0，第一次就等10s，第二次就等20s
        multiplier: 1

#Mybatis-plus
mybatis-plus:
  # 配置Mapper.xml配置文件
  mapper-locations: classpath:*/mapper/*Mapper.xml
  # 配置Mybatis数据返回类型别名(类名)
  type-aliases-package: com.sks.secondkillstore.pojo

# Mybatis SQL打印(方法接口所在的包，不是Mapper.xml所在的包)
logging:
  level:
    com.sks.secondkillstore.mapper: debug